{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;;;;AAAA,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AAC0B;AACc;AACd;AACQ;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oDAAW;AACvC;AACA;AACA;AACA;AACA,sBAAsB,kDAAa;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,SAAS;AACnC;AACA,+BAA+B,6CAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,4BAA4B;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,SAAS;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B,2BAA2B,6CAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,OAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2BAA2B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA,wBAAwB,oBAAoB;AAC5C,mCAAmC,6CAAI;AACvC;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA,4BAA4B,OAAO;AACnC;AACA;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA,4BAA4B,OAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,uBAAuB;AAClF,SAAS;AACT;AACA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,+CAAU;AAC5B;AACA,wBAAwB,kBAAkB;AAC1C;AACA;AACA,4BAA4B,qBAAqB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,uBAAuB;AAClF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,iEAAe,KAAK,EAAC;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC5bO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,iEAAe,IAAI,EAAC;;;;;;;;;;;;;;;ACfpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,iEAAe,WAAW,EAAC;;;;;;;;;;;;;;;AC3E3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,iEAAe,IAAI,EAAC;;;;;;;UCjDpB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNoC;AACpC,IAAI,sDAAK","sources":["webpack://CoolKulki/./src/modules/board.ts","webpack://CoolKulki/./src/modules/config.ts","webpack://CoolKulki/./src/modules/kula.ts","webpack://CoolKulki/./src/modules/pathFinding.ts","webpack://CoolKulki/./src/modules/pole.ts","webpack://CoolKulki/webpack/bootstrap","webpack://CoolKulki/webpack/runtime/define property getters","webpack://CoolKulki/webpack/runtime/hasOwnProperty shorthand","webpack://CoolKulki/webpack/runtime/make namespace object","webpack://CoolKulki/./src/index.ts"],"sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport Pole from \"./pole\";\r\nimport PathFinding from \"./pathFinding\";\r\nimport Kula from \"./kula\";\r\nimport { config } from \"./config\";\r\nvar Board = /** @class */ (function () {\r\n    function Board() {\r\n        this.el = document.getElementById(\"board\");\r\n        this.pre = document.getElementById(\"priev\");\r\n        this.wyn = document.getElementById(\"wynik\");\r\n        this.wyn.innerHTML = \"0\";\r\n        this.end = document.getElementById(\"end\");\r\n        this.endwynik = document.getElementById(\"endwynik\");\r\n        this.reset = document.getElementById(\"reset\");\r\n        this.fieldList = [];\r\n        this.pathFind = new PathFinding();\r\n        this.path = [];\r\n        this.moveable = true;\r\n        this.boardCreate();\r\n        this.wynik = 0;\r\n        this.kolory = config.kolory;\r\n        this.prievKol = [];\r\n        this.prievNext();\r\n    }\r\n    /** metoda na tworzenie borda */\r\n    Board.prototype.boardCreate = function () {\r\n        var _this = this;\r\n        for (var x_1 = 0; x_1 < 9; x_1++) {\r\n            var _loop_1 = function (y_1) {\r\n                var pole = new Pole(x_1, y_1);\r\n                this_1.fieldList.push(pole);\r\n                pole.div.onclick = function () {\r\n                    if (_this.moveable == true) {\r\n                        if (_this.startField == undefined) {\r\n                            if (pole.cool == false) {\r\n                                var check = _this.checkDoAround(pole);\r\n                                if (check) {\r\n                                    _this.startField = pole;\r\n                                    _this.startField.child.addClass(\"biggerKulka\");\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (pole != _this.startField) {\r\n                                if (_this.endField) {\r\n                                    if (_this.endField.cool == true) {\r\n                                        var move = _this.moveBall();\r\n                                        if (move == true) {\r\n                                            _this.moveable = false;\r\n                                            var zbite = _this.LookingALL();\r\n                                            if (zbite == false) {\r\n                                                _this.prievNext();\r\n                                                _this.LookingALL();\r\n                                                var luz = [];\r\n                                                for (var i = 0; i < _this.fieldList.length; i++) {\r\n                                                    if (_this.fieldList[i].cool == true) {\r\n                                                        luz.push(_this.fieldList[i]);\r\n                                                    }\r\n                                                }\r\n                                                if (luz.length < 3) {\r\n                                                    _this.endGame();\r\n                                                }\r\n                                            }\r\n                                            _this.wyn.innerHTML = _this.wynik.toString();\r\n                                            _this.startField = undefined;\r\n                                            _this.endField = undefined;\r\n                                            setTimeout(function () {\r\n                                                _this.fieldList.forEach(function (el) {\r\n                                                    el.clear();\r\n                                                });\r\n                                                _this.moveable = true;\r\n                                            }, _this.czas ? _this.czas : 1000);\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        var check = _this.checkDoAround(_this.endField);\r\n                                        _this.startField.child.removeClass(\"biggerKulka\");\r\n                                        if (check) {\r\n                                            _this.startField = _this.endField;\r\n                                            _this.startField.child.addClass(\"biggerKulka\");\r\n                                        }\r\n                                        _this.fieldList.forEach(function (el) {\r\n                                            el.clear();\r\n                                        });\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    if (pole.cool == false) {\r\n                                        var check = _this.checkDoAround(pole);\r\n                                        _this.startField.child.removeClass(\"biggerKulka\");\r\n                                        if (check) {\r\n                                            _this.startField = pole;\r\n                                            _this.startField.child.addClass(\"biggerKulka\");\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        _this.startField.child.removeClass(\"biggerKulka\");\r\n                                        _this.startField = undefined;\r\n                                    }\r\n                                    _this.endField = undefined;\r\n                                    _this.fieldList.forEach(function (el) {\r\n                                        el.clear();\r\n                                    });\r\n                                }\r\n                            }\r\n                            else {\r\n                                _this.startField.child.removeClass(\"biggerKulka\");\r\n                                _this.startField = undefined;\r\n                                _this.endField = undefined;\r\n                                _this.fieldList.forEach(function (el) {\r\n                                    el.clear();\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n                pole.div.onmouseover = function () {\r\n                    if (_this.moveable == true) {\r\n                        _this.path = [];\r\n                        if (pole.cool == true) {\r\n                            if (_this.startField && pole != _this.startField) {\r\n                                _this.endField = pole;\r\n                                _this.fieldList.forEach(function (el) {\r\n                                    el.clear();\r\n                                });\r\n                                _this.pathFinding();\r\n                            }\r\n                        }\r\n                        else {\r\n                            _this.fieldList.forEach(function (el) {\r\n                                el.clear();\r\n                            });\r\n                            _this.endField = undefined;\r\n                        }\r\n                    }\r\n                };\r\n                this_1.el.appendChild(pole.div);\r\n            };\r\n            var this_1 = this;\r\n            for (var y_1 = 0; y_1 < 9; y_1++) {\r\n                _loop_1(y_1);\r\n            }\r\n        }\r\n    };\r\n    /** metoda na tworzenie kul kolejnych */\r\n    Board.prototype.priev = function () {\r\n        this.pre.innerHTML = \"\";\r\n        for (var i = 0; i < 3; i++) {\r\n            var kula = new Kula(this.prievKol[i]);\r\n            this.pre.appendChild(kula.div);\r\n        }\r\n    };\r\n    /** metoda na przenoszenie kul na borda */\r\n    Board.prototype.prievNext = function () {\r\n        if (this.prievKol.length == 0) {\r\n            for (var i = 0; i < 3; i++) {\r\n                var iterator = Math.floor(Math.random() * this.kolory.length);\r\n                var kolor = this.kolory[iterator];\r\n                this.prievKol.push(kolor);\r\n            }\r\n        }\r\n        this.playBalls();\r\n        this.prievKol = [];\r\n        for (var i = 0; i < 3; i++) {\r\n            var iterator = Math.floor(Math.random() * this.kolory.length);\r\n            var kolor = this.kolory[iterator];\r\n            this.prievKol.push(kolor);\r\n        }\r\n        this.priev();\r\n    };\r\n    /** metoda na bawienie sie kulkami */\r\n    Board.prototype.playBalls = function () {\r\n        var luz = [];\r\n        for (var i = 0; i < this.fieldList.length; i++) {\r\n            if (this.fieldList[i].cool == true) {\r\n                luz.push(this.fieldList[i]);\r\n            }\r\n        }\r\n        if (luz.length < 3) {\r\n            this.endGame();\r\n        }\r\n        var chosens = [];\r\n        for (var i = 0; i < 3; i++) {\r\n            var iterator = Math.floor(Math.random() * luz.length);\r\n            chosens.push(luz[iterator]);\r\n            luz.splice(iterator, 1);\r\n        }\r\n        for (var i = 0; i < chosens.length; i++) {\r\n            chosens[i].addBall(new Kula(this.prievKol[i]));\r\n        }\r\n    };\r\n    Board.prototype.endGame = function (bool) {\r\n        var _this = this;\r\n        if (bool === void 0) { bool = false; }\r\n        if (bool == true) {\r\n            this.end.style.backgroundColor = \"pink\";\r\n        }\r\n        this.end.style.display = 'flex';\r\n        this.endwynik.innerHTML = \"Twoj wynik to: \" + this.wynik;\r\n        var button = document.createElement(\"button\");\r\n        button.onclick = function () {\r\n            _this.el.innerHTML = \"\";\r\n            _this.pre.innerHTML = \"\";\r\n            _this.wyn.innerHTML = \"0\";\r\n            _this.wynik = 0;\r\n            _this.fieldList = [];\r\n            _this.boardCreate();\r\n            _this.prievNext();\r\n            _this.end.style.display = 'none';\r\n        };\r\n        button.innerHTML = \"reset\";\r\n        this.reset.innerHTML = \"\";\r\n        this.reset.appendChild(button);\r\n    };\r\n    /** metoda na szukanie powolania zyciowego */\r\n    Board.prototype.pathFinding = function () {\r\n        if (this.startField && this.endField) {\r\n            this.path = this.pathFind.trasa(this.fieldList, this.startField, this.endField);\r\n            if (this.path) {\r\n                this.path.forEach(function (el) {\r\n                    el.addClass(\"path\");\r\n                });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * metoda na poruszanie swoimi kulami\r\n     * @returns zwraca true false\r\n     */\r\n    Board.prototype.moveBall = function () {\r\n        if (this.startField && this.endField) {\r\n            if (this.path && this.path.length != 0) {\r\n                this.startField.child.removeClass(\"biggerKulka\");\r\n                var zez = this.startField.removeBall();\r\n                this.endField.addBall(zez);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * metoda na szukanie obcych kul w okolicy\r\n     * @param pole przyjmuje pole do szukania\r\n     * @returns zwraca true false\r\n     */\r\n    Board.prototype.checkDoAround = function (pole) {\r\n        if (pole) {\r\n            var index = pole.x * 9 + pole.y;\r\n            var somsiedzi = [];\r\n            if (index - 9 >= 0) {\r\n                somsiedzi.push(this.fieldList[index - 9]);\r\n            }\r\n            if (index + 9 < 81) {\r\n                somsiedzi.push(this.fieldList[index + 9]);\r\n            }\r\n            if ((index - 1) % 9 != 8 && index - 1 >= 0) {\r\n                somsiedzi.push(this.fieldList[index - 1]);\r\n            }\r\n            if ((index + 1) % 9 != 0 && index + 1 < 81) {\r\n                somsiedzi.push(this.fieldList[index + 1]);\r\n            }\r\n            var bullBenek_1 = false;\r\n            somsiedzi.forEach(function (el) {\r\n                if (el.cool == true) {\r\n                    bullBenek_1 = true;\r\n                }\r\n            });\r\n            return bullBenek_1;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * metoda szukajaca kolejnych kul w lini w ramach przygotowania do zbijania\r\n     * @returns zwraca true false\r\n     */\r\n    Board.prototype.LookingALL = function () {\r\n        var udane;\r\n        var bicie = [];\r\n        var pion = [];\r\n        var poziom = [];\r\n        var skoslewo = [];\r\n        var skosprawo = [];\r\n        var len = 9;\r\n        for (var z = 0; z < 2 * len - 1; z++) {\r\n            var x_2 = Math.max(0, -(len - 1) + z);\r\n            var y_2 = Math.max(0, (len - 1) - z);\r\n            skoslewo[z] = [];\r\n            while (y_2 < len && x_2 < len) {\r\n                var index = y_2 * len + x_2;\r\n                skoslewo[z].push(this.fieldList[index]);\r\n                x_2++;\r\n                y_2++;\r\n            }\r\n        }\r\n        for (var z = 0; z < 2 * len - 1; z++) {\r\n            var x_3 = len - 1 - Math.max(0, -(len - 1) + z);\r\n            var y_3 = Math.max(0, (len - 1) - z);\r\n            skosprawo[z] = [];\r\n            while (y_3 < len && x_3 >= 0) {\r\n                var index = y_3 * len + x_3;\r\n                skosprawo[z].push(this.fieldList[index]);\r\n                x_3--;\r\n                y_3++;\r\n            }\r\n        }\r\n        for (var i = 0; i < 9; i++) {\r\n            poziom[i] = [];\r\n            for (var z = 0; z < 9; z++) {\r\n                var index = i * 9 + z;\r\n                poziom[i].push(this.fieldList[index]);\r\n            }\r\n        }\r\n        for (var i = 0; i < 9; i++) {\r\n            pion[i] = [];\r\n            for (var z = 0; z < 9; z++) {\r\n                var index = z * 9 + i;\r\n                pion[i].push(this.fieldList[index]);\r\n            }\r\n        }\r\n        var pionTab = this.dodawaieDoBicia(pion);\r\n        bicie.push.apply(bicie, pionTab);\r\n        var poziomTab = this.dodawaieDoBicia(poziom);\r\n        bicie.push.apply(bicie, poziomTab);\r\n        var skosLTab = this.dodawaieDoBicia(skoslewo);\r\n        bicie.push.apply(bicie, skosLTab);\r\n        var skosPTab = this.dodawaieDoBicia(skosprawo);\r\n        bicie.push.apply(bicie, skosPTab);\r\n        bicie = bicie.filter(function (thing, index, self) {\r\n            return index === self.findIndex(function (t) { return (t === thing); });\r\n        });\r\n        udane = false;\r\n        for (var i = 0; i < bicie.length; i++) {\r\n            bicie[i].removeBall();\r\n            udane = true;\r\n        }\r\n        this.wynik += bicie.length;\r\n        return udane;\r\n    };\r\n    /**\r\n     * metoda na ustawianie kul do odstrzału\r\n     * @param lista lista pól\r\n     * @returns zwraca tablice pól\r\n     */\r\n    Board.prototype.dodawaieDoBicia = function (lista) {\r\n        var ilo = config.ile;\r\n        var dozbicia = [];\r\n        for (var j = 0; j < lista.length; j++) {\r\n            var tab = [];\r\n            var kol = \"\";\r\n            for (var k = 0; k < lista[j].length; k++) {\r\n                var pole = lista[j][k];\r\n                if (pole.cool == true) {\r\n                    if (tab.length >= ilo) {\r\n                        dozbicia.push.apply(dozbicia, tab);\r\n                    }\r\n                    tab = [];\r\n                    kol = \"\";\r\n                }\r\n                else {\r\n                    if (pole.child.kolor != kol) {\r\n                        if (tab.length >= ilo) {\r\n                            dozbicia.push.apply(dozbicia, tab);\r\n                            tab = [];\r\n                            kol = pole.child.kolor;\r\n                        }\r\n                        else {\r\n                            tab = [];\r\n                            kol = pole.child.kolor;\r\n                        }\r\n                        if (kol == \"\") {\r\n                            kol = pole.child.kolor;\r\n                        }\r\n                    }\r\n                    if (pole.child.kolor == kol) {\r\n                        tab.push(pole);\r\n                    }\r\n                }\r\n                if (tab.length >= ilo) {\r\n                    dozbicia.push.apply(dozbicia, tab);\r\n                }\r\n            }\r\n        }\r\n        dozbicia = dozbicia.filter(function (thing, index, self) {\r\n            return index === self.findIndex(function (t) { return (t === thing); });\r\n        });\r\n        return dozbicia;\r\n    };\r\n    __decorate([\r\n        ending,\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [Boolean]),\r\n        __metadata(\"design:returntype\", void 0)\r\n    ], Board.prototype, \"endGame\", null);\r\n    Board = __decorate([\r\n        timer,\r\n        __metadata(\"design:paramtypes\", [])\r\n    ], Board);\r\n    return Board;\r\n}());\r\nexport default Board;\r\nfunction timer(target) {\r\n    var original = target;\r\n    var construct = function (constructor, args) {\r\n        var c = function () {\r\n            this.czas = 1000;\r\n            return constructor.apply(this, args);\r\n        };\r\n        c.prototype = constructor.prototype;\r\n        c.prototype.toString = function () {\r\n        };\r\n        return new c();\r\n    };\r\n    var newConstructor = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        return construct(original, args);\r\n    };\r\n    newConstructor.prototype = original.prototype;\r\n    return newConstructor;\r\n}\r\nfunction ending(target, key, descriptor) {\r\n    var originalValue = descriptor.value;\r\n    descriptor.value = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        args[0] = true;\r\n        var result = originalValue.apply(this, args);\r\n        return result;\r\n    };\r\n    return descriptor;\r\n}\r\n","export var config = {\r\n    kolory: [\r\n        'green',\r\n        'red',\r\n        'yellow',\r\n        'blue',\r\n        'pink',\r\n        'violet',\r\n        'grey',\r\n    ],\r\n    ile: 5\r\n};\r\n","var Kula = /** @class */ (function () {\r\n    function Kula(kolor) {\r\n        this.div = document.createElement(\"div\");\r\n        this.div.classList.add(\"kulka\");\r\n        this.kolor = kolor;\r\n        this.div.classList.add(this.kolor);\r\n    }\r\n    Kula.prototype.addClass = function (nazwa) {\r\n        this.div.classList.add(nazwa);\r\n    };\r\n    Kula.prototype.removeClass = function (nazwa) {\r\n        this.div.classList.remove(nazwa);\r\n    };\r\n    return Kula;\r\n}());\r\nexport default Kula;\r\n","var PathFinding = /** @class */ (function () {\r\n    function PathFinding() {\r\n        this.doSprawdzenia = [];\r\n        this.sprawdzone = [];\r\n    }\r\n    PathFinding.prototype.trasa = function (list, start, end) {\r\n        var _this = this;\r\n        var wszystkie = list;\r\n        this.doSprawdzenia = [start];\r\n        this.sprawdzone = [];\r\n        var _loop_1 = function () {\r\n            var sortedOne = this_1.doSprawdzenia.sort(function (a, b) {\r\n                return a.f_cost - b.f_cost;\r\n            });\r\n            var filtered = sortedOne.filter(function (el, i, a) {\r\n                if (el.f_cost == a[0].f_cost) {\r\n                    return el;\r\n                }\r\n            });\r\n            var sortedTwo = filtered.sort(function (a, b) {\r\n                return a.h_cost - b.h_cost;\r\n            });\r\n            var current = sortedTwo[0];\r\n            this_1.doSprawdzenia.splice(this_1.doSprawdzenia.indexOf(current), 1);\r\n            this_1.sprawdzone.push(current);\r\n            if (current == end) {\r\n                return { value: this_1.znalezione(current) };\r\n            }\r\n            else {\r\n                var index = current.x * 9 + current.y;\r\n                var somsiedzi = [];\r\n                if (index - 9 >= 0) {\r\n                    somsiedzi.push(wszystkie[index - 9]);\r\n                }\r\n                if (index + 9 < 81) {\r\n                    somsiedzi.push(wszystkie[index + 9]);\r\n                }\r\n                if ((index - 1) % 9 != 8 && index - 1 >= 0) {\r\n                    somsiedzi.push(wszystkie[index - 1]);\r\n                }\r\n                if ((index + 1) % 9 != 0 && index + 1 < 81) {\r\n                    somsiedzi.push(wszystkie[index + 1]);\r\n                }\r\n                somsiedzi.forEach(function (el) {\r\n                    if (el.cool == true && _this.sprawdzone.indexOf(el) == -1) {\r\n                        var n_cost = el.fieldToField(end) + current.g_cost + 1;\r\n                        if (n_cost < el.f_cost || el.f_cost == 0 || _this.doSprawdzenia.indexOf(el) == -1) {\r\n                            el.setCost(current.g_cost + 1, el.fieldToField(end));\r\n                            el.parent = current;\r\n                            if (_this.doSprawdzenia.indexOf(el) == -1) {\r\n                                _this.doSprawdzenia.push(el);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        };\r\n        var this_1 = this;\r\n        while (this.doSprawdzenia.length > 0) {\r\n            var state_1 = _loop_1();\r\n            if (typeof state_1 === \"object\")\r\n                return state_1.value;\r\n        }\r\n    };\r\n    PathFinding.prototype.znalezione = function (pole) {\r\n        var tab = [];\r\n        while (pole.parent) {\r\n            tab.push(pole);\r\n            pole = pole.parent;\r\n        }\r\n        tab.push(pole);\r\n        return tab;\r\n    };\r\n    return PathFinding;\r\n}());\r\nexport default PathFinding;\r\n","var Pole = /** @class */ (function () {\r\n    function Pole(x, y) {\r\n        this.div = document.createElement(\"div\");\r\n        this.div.classList.add(\"divek\");\r\n        this.x = x;\r\n        this.y = y;\r\n        this.f_cost = 0;\r\n        this.g_cost = 0;\r\n        this.h_cost = 0;\r\n        this.cool = true;\r\n    }\r\n    Pole.prototype.setCost = function (g_cost, h_cost) {\r\n        this.g_cost = g_cost;\r\n        this.h_cost = h_cost;\r\n        this.f_cost = g_cost + h_cost;\r\n    };\r\n    Pole.prototype.fieldToField = function (pole) {\r\n        var distance = Math.abs(pole.x - this.x) + Math.abs(pole.y - this.y);\r\n        return distance;\r\n    };\r\n    Pole.prototype.clear = function () {\r\n        this.f_cost = 0;\r\n        this.g_cost = 0;\r\n        this.h_cost = 0;\r\n        this.parent = undefined;\r\n        this.removeClass(\"path\");\r\n    };\r\n    Pole.prototype.addClass = function (nazwa) {\r\n        this.div.classList.add(nazwa);\r\n    };\r\n    Pole.prototype.removeClass = function (nazwa) {\r\n        this.div.classList.remove(nazwa);\r\n    };\r\n    Pole.prototype.addBall = function (kula) {\r\n        this.div.appendChild(kula.div);\r\n        this.child = kula;\r\n        this.cool = false;\r\n        kula.parent = this;\r\n    };\r\n    Pole.prototype.removeBall = function () {\r\n        this.div.removeChild(this.child.div);\r\n        var lostChild = this.child;\r\n        this.child.parent = undefined;\r\n        this.child = undefined;\r\n        this.cool = true;\r\n        return lostChild;\r\n    };\r\n    return Pole;\r\n}());\r\nexport default Pole;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import Board from \"./modules/board\";\r\nnew Board();\r\n"],"names":[],"sourceRoot":""}